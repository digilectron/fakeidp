version: 2.1
#orbs:
#  codecov: codecov/codecov@1.0.5
#docker-workflow:
jobs:
  build:
    docker:
      - image: cimg/rust:1.64.0

    environment:
      # Set your codecov token if your repository is private.
      CODECOV_TOKEN: "ab1ebf03-ceaa-44e5-a5c3-991540225856"
      TZ: "/usr/share/zoneinfo/Europe/Paris"

    steps:
      - checkout
      - restore_cache:
          key: project-cache
      - run:
          name: Stable Build
          command: |
            cargo build
      - run:
          name: Test
          command: cargo test --verbose --jobs 1 --all
      - run:
          name: Upload Coverage
          command: |
            .scripts/codecov.sh
      - save_cache:
          key: project-cache
          paths:
            - "~/.cargo"
            - "./target"

  publish-docker-latest:
    machine:
      image: ubuntu-2204:2022.04.1
    resource_class: large
    steps:
      - checkout
      - run:
          name: Create the Multi Arch build structure
          command: |
            docker context create multi-arch-context
            docker buildx create --use multi-arch-context --name multi-arch-builder
      - run:
          name: Docker build and push
          command: |
            echo `git describe --tags --exact-match` > /tmp/version.txt
            TAG=$(cat /tmp/version.txt)
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker buildx build --platform=linux/arm64,linux/amd64 --push \
              -t spectare/oidc-token-test-service:latest \
              --build-arg VERSION=$(cat /tmp/version.txt) \
              --build-arg COMMITID=${CIRCLE_SHA1} \
              .

  publish-docker-release:
    docker:
      - image: cimg/rust:1.64.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Create the Multi Arch build structure
          command: |
            docker context create multi-arch-context
            docker buildx create --use multi-arch-context --name multi-arch-builder
      - run:
          name: Docker build and push
          command: |
            echo `git describe --tags --exact-match` > /tmp/version.txt
            TAG=$(cat /tmp/version.txt)
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker buildx build --platform=linux/arm64,linux/amd64 --push \
              -t spectare/oidc-token-test-service:$TAG \
              -t spectare/oidc-token-test-service:latest \
              --build-arg VERSION=$(cat /tmp/version.txt) \
              --build-arg COMMITID=${CIRCLE_SHA1} \
              .

workflows:
  version: 2
  ci:
    jobs:
      - build
      - publish-docker-latest:
          context: DOCKER
          requires:
            - build
          filters:
            branches:
              only: main
      - publish-docker-release:
          context: DOCKER
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
